{"version":3,"sources":["layout/Header.js","pages/HomePage.js","pages/OrderPage.js","model/StockItem.js","services/StockService.js","pages/StockPage.js","App.js","serviceWorker.js","index.js"],"names":["Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","HomePage","OrderPage","StockItem","props","target","disabled","editStock","handleChange","handleChangeFn","saveStock","cancelChanges","initTarget","obj","service","handleEmptyTarget","assign","attr","e","updatedTarget","value","onChange","productName","quantity","modificationDate","stockStatus","price","hidden","onClick","glyphicons","crossHeavy","checkHeavy","pencil","StockService","url","process","fetch","response","json","body","status","Error","message","stock","toString","method","JSON","stringify","headers","Content-Type","resp","StockPage","stocks","addNewStock","removeEmptyStock","getStocks","_this2","plus","map","key","order","src_model_StockItem","shift","unshift","App","BrowserRouter","basename","layout_Header","Route","exact","path","component","componen","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.981025d9.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nclass Header extends Component {\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <Link className=\"navbar-brand\" to=\"/\">L A V A D O</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"/>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item \">\r\n                            <Link className=\"nav-link\" to='/stock'>Stoc</Link>\r\n                        </li>\r\n                        <li className=\"nav-item \">\r\n                           <Link className=\"nav-link\" to='/orders'>Comenzi</Link>\r\n                        </li>\r\n                        <li className=\"nav-item \">\r\n                           <Link className=\"nav-link\" to='/statistics'>Statistici</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n      <h1>Pagina principala</h1>\r\n      <h2>Inca nu stiu ce sa pun aici. Momentan e implementat doar pagina de stocuri</h2>\r\n      </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, {Component} from 'react';\r\n\r\nclass OrderPage extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <h1>Orders Page!</h1>\r\n        <span>Meow</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OrderPage;\r\n","import React, {Component} from 'react';\r\nimport \"./StockItem.css\";\r\n\r\nimport glyphicons from 'glyphicons';\r\n\r\nclass StockItem extends Component {\r\n    state = {target: {}, disabled: false};\r\n\r\n    editStock() {\r\n        this.initTarget = Object.assign({}, this.state.target);\r\n        this.setState({disabled: false, target: this.state.target});\r\n    }\r\n\r\n    cancelChanges() {\r\n        this.setState({disabled: \"disabled\", target: this.initTarget});\r\n        if (!this.initTarget.id) {\r\n            this.handleEmptyTarget();\r\n        }\r\n    }\r\n\r\n    async saveStock() {\r\n        this.setState({disabled: \"disabled\", target: await this.service.saveStock(this.state.target)});\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.editStock = this.editStock.bind(this);\r\n        this.handleChange = this.handleChangeFn.bind(this);\r\n        this.saveStock = this.saveStock.bind(this);\r\n        this.cancelChanges = this.cancelChanges.bind(this);\r\n        this.initTarget = props.obj;\r\n        this.service = props.service;\r\n        this.handleEmptyTarget = props.handleEmptyTarget;\r\n        this.state.disabled = props.obj.id ? \"disabled\" : false;\r\n        this.state.target = this.initTarget;\r\n    }\r\n\r\n    handleChangeFn(attr) {\r\n        return function (e) {\r\n            var updatedTarget = this.state.target;\r\n            updatedTarget[attr] = e.target.value;\r\n            this.setState({disabled: false, target: updatedTarget});\r\n        }.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row stockItemRow\">\r\n                <div className=\"col-xs-10 col-sm-10 col-md-11 col-lg-5\">\r\n                    <label>Produs</label>\r\n                    <input className=\"form-control\" onChange={this.handleChangeFn('productName')} disabled={this.state.disabled} type=\"text\"\r\n                           value={this.state.target.productName}/>\r\n                </div>\r\n                <div className=\"col-xs-6 col-sm-6 col-md-3 col-lg-1\">\r\n                    <label>Cantitate</label>\r\n                    <input  className=\"form-control\" disabled={this.state.disabled} onChange={this.handleChangeFn('quantity')} type=\"text\"\r\n                           value={this.state.target.quantity}/>\r\n                </div>\r\n                <div className=\"col-xs-6 col-sm-6 col-md-3 col-lg-2\">\r\n                    <label>Data Actualizare</label>\r\n                    <input  className=\"form-control\" disabled={this.state.disabled} onChange={this.handleChangeFn('modificationDate')} type=\"text\"\r\n                           value={this.state.target.modificationDate}/>\r\n                </div>\r\n                <div className=\"col-xs-6 col-sm-6 col-md-3 col-lg-2\">\r\n                    <label>Status</label>\r\n                    <input  className=\"form-control\" disabled={this.state.disabled} onChange={this.handleChangeFn(\"stockStatus\")} type=\"text\"\r\n                           value={this.state.target.stockStatus}/>\r\n                </div>\r\n                <div className=\"col-xs-6 col-sm-6 col-md-3 col-lg-1\">\r\n                    <label>Pret</label>\r\n                    <input  className=\"form-control\" disabled={this.state.disabled} onChange={this.handleChangeFn(\"price\")} type=\"text\"\r\n                           value={this.state.target.price}/>\r\n                </div>\r\n                <div className=\"buttonsContainer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" hidden={this.state.disabled}\r\n                            onClick={this.cancelChanges}>{glyphicons.crossHeavy}</button>\r\n                    <button type=\"button\" className=\"btn btn-secondary\" hidden={this.state.disabled}\r\n                            onClick={this.saveStock}>{glyphicons.checkHeavy}</button>\r\n                    <button type=\"button\" className=\"btn btn-secondary\" hidden={!this.state.disabled}\r\n                            onClick={this.editStock}>{glyphicons.pencil}</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default StockItem;\r\n","\r\nclass StockService {\r\n    constructor() {\r\n       this.url =  process.env.REACT_APP_API_URL + '/stocks/';\r\n    }\r\n\r\n    async getStocks() {\r\n        const response = await fetch(this.url);\r\n        const body = await response.json();\r\n        if (response.status !== 200) throw Error(body.message);\r\n        return body;\r\n    }\r\n\r\n    async saveStock(stock) {\r\n        let id = stock.id;\r\n        const response = await fetch(this.url + (id ? id.toString() : ''), {\r\n            method: id ? 'PUT' : 'POST',\r\n            body: JSON.stringify(stock),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n       const resp = await response.json();\r\n       if (response.status !== 200) throw Error(resp.message);\r\n       return resp;\r\n    }\r\n}\r\n\r\nexport default StockService;","import React, {Component} from 'react';\r\nimport glyphicons from 'glyphicons';\r\nimport StockItem from '../model/StockItem';\r\nimport './StockPage.css';\r\nimport StockService from '../services/StockService';\r\n\r\nclass StockPage extends Component {\r\n    state = {stocks: []};\r\n\r\n    constructor() {\r\n        super();\r\n        this.addNewStock = this.addNewStock.bind(this);\r\n        this.removeEmptyStock = this.removeEmptyStock.bind(this);\r\n        this.service = new StockService();\r\n        this.getStocks();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <div className=\"container stockPage\">\r\n                    <h2>Stocul Curent:\r\n                        <button type=\"button\" className=\"btn btn-secondary addButton\"\r\n                                onClick={this.addNewStock}>{glyphicons.plus} Adauga nou\r\n                        </button>\r\n                    </h2>\r\n                    <ul className=\"list-group\">\r\n                        {\r\n                           this.state.stocks.map(stock => (\r\n                                <li className=\"list-group-item\" key={stock.id ? stock.id +\"\" : \"0\"} order={stock.id ? stock.id +\"\" : \"0\"}>\r\n                                    <StockItem service={this.service} obj={stock} handleEmptyTarget={this.removeEmptyStock}/>\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    removeEmptyStock() {\r\n        this.state.stocks.shift();\r\n        this.setState(this.state);\r\n    }\r\n\r\n    async getStocks() {\r\n        this.setState({stocks: await this.service.getStocks()});\r\n    }\r\n\r\n    addNewStock() {\r\n        this.state.stocks.unshift({productName: \"\", quantity: \"\", modificationDate: \"\", stockStatus: \"\", price: \"\"});\r\n        this.setState(this.state);\r\n    }\r\n}\r\n\r\nexport default StockPage;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport Header from './layout/Header';\r\nimport HomePage from './pages/HomePage';\r\nimport OrderPage from './pages/OrderPage';\r\nimport StockPage from './pages/StockPage';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <div>\r\n            <Header/>\r\n            <Route exact path=\"/\" component={HomePage}/>\r\n            <Route exact path=\"/stock\"  component={StockPage}/>\r\n            <Route exact path=\"/orders\" componen={OrderPage}/>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'jquery';\r\nimport 'bootstrap';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}