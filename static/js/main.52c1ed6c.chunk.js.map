{"version":3,"sources":["layout/Header.js","pages/HomePage.js","pages/OrderPage.js","model/StockItem.js","pages/StockPage.js","App.js","serviceWorker.js","index.js"],"names":["Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","reactstrap_es","color","dark","expand","href","onClick","navbar","className","Link","to","Component","HomePage","OrderPage","StockItem","props","target","disabled","editStock","handleChange","handleChangeFn","saveStock","cancelChanges","initTarget","obj","handleEmptyTarget","id","assign","fetch","process","toString","method","body","JSON","stringify","headers","Content-Type","response","json","attr","e","updatedTarget","value","in","xs","sm","md","lg","onChange","type","productName","quantity","modificationDate","stockStatus","price","hidden","glyphicons","crossHeavy","checkHeavy","pencil","StockPage","stocks","addNewStock","removeEmptyStock","getStocks","_this2","plus","map","stock","key","src_model_StockItem","shift","unshift","status","Error","message","App","BrowserRouter","basename","layout_Header","Route","exact","path","component","componen","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52c1ed6c.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem, NavLink} from 'reactstrap';\r\n class Header extends Component {\r\n   toggle() {\r\n     this.setState({\r\n       isOpen: !this.state.isOpen\r\n     });\r\n   }\r\n   constructor(){\r\n     super();\r\n     this.toggle = this.toggle.bind(this);\r\n     this.state = {\r\n       isOpen: false\r\n     };\r\n   }\r\n   render() {\r\n     return (\r\n       <Navbar color=\"dark\" dark expand=\"sm\">\r\n          <NavbarBrand href=\"/\">L A V A D O</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink><Link to='/stock'>Stoc</Link></NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink><Link to='/orders'>Comenzi</Link></NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink><Link to='/statistics'>Statistici</Link></NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n     )\r\n   }\r\n }\r\n export default Header;\r\n","import React, {Component} from 'react';\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n      <h1>Pagina principala</h1>\r\n      <h2>Inca nu stiu ce sa pun aici. Momentan e implementat doar pagina de stocuri</h2>\r\n      </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, {Component} from 'react';\r\n\r\nclass OrderPage extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <h1>Orders Page!</h1>\r\n        <span>Meow</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OrderPage;\r\n","import React, {Component} from 'react';\r\nimport \"./StockItem.css\";\r\n\r\nimport glyphicons from 'glyphicons';\r\nimport {Input, Row, Col, Fade,Button} from 'reactstrap';\r\n\r\nclass StockItem extends Component {\r\n    state = {target: {}, disabled: false};\r\n\r\n    editStock() {\r\n       this.initTarget = Object.assign({},this.state.target);\r\n       this.setState({disabled: false, target: this.state.target});\r\n    }\r\n\r\n    cancelChanges(){\r\n      this.setState({disabled: \"disabled\", target: this.initTarget});\r\n      if(!this.initTarget.id) {\r\n        this.handleEmptyTarget();\r\n      }\r\n    }\r\n\r\n    async saveStock() {\r\n      //todo move to stockService\r\n      var id = this.state.target.id;\r\n      const response = await fetch(process.env.REACT_APP_API_URL + 'stocks/' + (id ? id.toString(): ''), {\r\n        method: id ? 'PUT': 'POST',\r\n        body: JSON.stringify(this.state.target),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const body = await response.json();\r\n      this.setState({disabled: \"disabled\", target: body});\r\n    }\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.editStock = this.editStock.bind(this);\r\n      this.handleChange =this.handleChangeFn.bind(this);\r\n      this.saveStock = this.saveStock.bind(this);\r\n      this.cancelChanges = this.cancelChanges.bind(this);\r\n      this.initTarget =props.obj;\r\n      this.handleEmptyTarget = props.handleEmptyTarget;\r\n      this.state.disabled = props.obj.id ? \"disabled\" : false;\r\n      this.state.target = this.initTarget;\r\n    }\r\n\r\n    handleChangeFn(attr) {\r\n      return function(e){\r\n        var updatedTarget = this.state.target;\r\n        updatedTarget[attr] = e.target.value;\r\n        this.setState({disabled: false, target: updatedTarget});\r\n      }.bind(this);\r\n    }\r\n\r\n    render(){\r\n      return(\r\n        <Fade in={true}>\r\n          <Row className=\"stockItemRow\">\r\n            <Col xs=\"10\" sm=\"10\" md=\"11\" lg=\"5\"><label>Produs</label><Input onChange={this.handleChangeFn('productName')} disabled={this.state.disabled} type=\"text\" value={this.state.target.productName}/></Col>\r\n            <Col xs=\"6\" sm=\"6\" md=\"3\" lg=\"1\"><label>Cantitate</label><Input disabled={this.state.disabled} onChange={this.handleChangeFn('quantity')} type=\"text\" value={this.state.target.quantity}/></Col>\r\n            <Col xs=\"6\" sm=\"6\" md=\"3\" lg=\"2\"><label>Data Actualizare</label><Input disabled={this.state.disabled} onChange={this.handleChangeFn('modificationDate')} type=\"text\" value={this.state.target.modificationDate}/></Col>\r\n            <Col xs=\"6\" sm=\"6\" md=\"3\" lg=\"2\"><label>Status</label><Input disabled={this.state.disabled} onChange={this.handleChangeFn(\"stockStatus\")} type=\"text\" value={this.state.target.stockStatus}/></Col>\r\n            <Col xs=\"6\" sm=\"6\" md=\"3\" lg=\"1\"><label>Pret</label><Input disabled={this.state.disabled} onChange={this.handleChangeFn(\"price\")} type=\"text\" value={this.state.target.price}/></Col>\r\n            <div className=\"buttonsContainer\">\r\n              <Button hidden={this.state.disabled}  color=\"secondary\" onClick={this.cancelChanges}>{glyphicons.crossHeavy}</Button>\r\n              <Button hidden={this.state.disabled}  color=\"secondary\" onClick={this.saveStock}>{glyphicons.checkHeavy}</Button>\r\n              <Button hidden={!this.state.disabled} color=\"secondary\" onClick={this.editStock}>{glyphicons.pencil}</Button>\r\n            </div>\r\n\r\n         </Row>\r\n        </Fade>\r\n      )\r\n    }\r\n\r\n}\r\n\r\nexport default StockItem;\r\n","import React, {Component} from 'react';\r\nimport {Container,ListGroup, ListGroupItem, Button} from 'reactstrap';\r\nimport glyphicons from 'glyphicons';\r\nimport StockItem from '../model/StockItem';\r\nimport './StockPage.css';\r\n\r\nclass StockPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { stocks : [] };\r\n    this.addNewStock = this.addNewStock.bind(this);\r\n    this.removeEmptyStock = this.removeEmptyStock.bind(this);\r\n    this.getStocks();\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <br/>\r\n        <Container className=\"stockPage\">\r\n          <h2>Stocul Curent:<Button className=\"addButton\" onClick={this.addNewStock}>{glyphicons.plus} Adauga nou</Button></h2>\r\n          <ListGroup>\r\n            {\r\n            this.state.stocks.map(stock => (\r\n              <ListGroupItem key={stock.id? stock.id : \"0\"}><StockItem obj={stock} handleEmptyTarget={this.removeEmptyStock}></StockItem></ListGroupItem>\r\n            ))\r\n          }\r\n          </ListGroup>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n  removeEmptyStock() {\r\n    this.state.stocks.shift();\r\n    this.setState(this.state);\r\n  }\r\n  addNewStock() {\r\n    this.state.stocks.unshift({});\r\n    this.setState(this.state);\r\n  }\r\n  async getStocks() {\r\n    //todo move to stockService\r\n    const response = await fetch(process.env.REACT_APP_API_URL + '/stocks');\r\n    const body = await response.json();\r\n    if (response.status !== 200) throw Error(body.message);\r\n    return this.setState({stocks: body});\r\n  }\r\n}\r\n\r\nexport default StockPage;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport Header from './layout/Header';\r\nimport HomePage from './pages/HomePage';\r\nimport OrderPage from './pages/OrderPage';\r\nimport StockPage from './pages/StockPage';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <div>\r\n            <Header></Header>\r\n            <Route exact path=\"/\" component={HomePage}/>\r\n            <Route exact path=\"/stock\"  component={StockPage}/>\r\n            <Route exact path=\"/orders\" componen={OrderPage}/>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}